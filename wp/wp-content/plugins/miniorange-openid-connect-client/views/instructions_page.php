<?php

function mo_openidconnect_client_instructions($appname, $newdiv){
	
	if($newdiv)
		echo '</div><div class="mo_table_layout" id="howtoconfigure">';
	
	if($appname=="google") {
		echo '<br><strong>Instructions to configure Google :</strong><ol><li>Visit the Google website for developers <a href="https://console.developers.google.com/project"target="_blank">console.developers.google.com</a>.</li><li>Open the Google API Console Credentials page and go to API Manager -> Credentials</li><li>From the project drop-down, choose Create a new project, enter a name for the project, and optionally, edit the provided Project ID. Click Create.</li><li>On the Credentials page, select Create credentials, then select OAuth client ID.</li><li>You may be prompted to set a product name on the Consent screen. If so, click Configure consent screen, supply the requested information, and click Save to return to the Credentials screen.</li><li>Select Web Application for the Application Type. Follow the instructions to enter JavaScript origins, redirect URIs, or both. For Redirect URI provide the <b>Configure OAuth->Redirect/Callback URI</b>.</li><li>Click Create.</li><li>On the page that appears, copy the client ID and client secret to your clipboard, as you will need them to configure above.</li><li>Enable the Google+ API.</li><li>Go to Appearance->Widgets. Among the available widgets youwill find miniOrange OpenID Connect, drag it to the widget area where you want it to appear.</li><li>Now logout and go to your site. You will see a login link where you placed that widget.</li></ol>';
	} else if($appname == "amazon") {
		echo '<br><strong>Instructions to configure Amazon:</strong><ol><li>Sign in to the Amazon portal at <a href="https://login.amazon.com" target="_blank">https://login.amazon.com</a>.</li><li>On the top bar, click on your account and under the App Console, click select for Login with Amazon where you wish to register new application.</li><li>Click on More Services on the left hand side, and choose Azure Active Directory.</li><li>Click on App registrations and choose Add.</li><li>Click on Add to create the application.</li><li>Enter a friendly name (can be any name) for the application under Application Information then click on the Save button.</li><li>In Web Settings, click on edit. Enter Callback URL under Allowed Return URLs and click on Save. For Redirect/Callback URI provide the <b>Configure OAuth->Redirect/Callback URI</b>. Find the <b>Client ID</b> value and copy it to the clipboard.</li><li>Now, to obtain the <b>Client Secret / Key</b> Click on the Show Secret button. Copy the key to the clipboard.</li><li>Client ID and the Client Secret generated by Amazon from the App is the Client ID and Client Secret.</li><li>Go to Appearance->Widgets. Among the available widgets you will find miniOrange OpenID Connect, drag it to the widget area where you want it to appear.</li><li>Now logout and go to your site. You will see a login link where you placed that widget.</li></ol>';
	}else if($appname == "microsoft") {
		echo '<strong>Instructions:</strong><ol><li>Sign in to the Azure portal at <a href="https://login.microsoftonline.com"target="_blank">https://login.microsoftonline.com</a>.</li><li>On the top bar, click on your account and under the Directory list, choose the Active Directory tenant where you wish to register your application.</li><li>Click on More Services on the left hand side, and choose Azure Active Directory.</li><li>Click on App registrations and choose Add.</li><li>Click on Add to create the application.</li><li>Enter a friendly name (can be any name) for the application, for example ‘AzureADDriver1’ and select ‘Web Application and/or Web API’ as the Application Type. For the sign-on URL, enter the base URL for the sample, which can be “http://AzureADDriver1” Sign-on URL: your application URL (completely arbitrary) then click on the Create button.</li><li>While still in the Azure portal, choose your application, click on Settings. Find the <b>Client ID</b> value and copy it to the clipboard.</li><li>Now, to obtain the <b>Client Secret / Key</b> Click on the Keys option appearing on the right hand side, which looks as given below.</li><li>The key will be displayed when these settings are saved and compulsory, copy the key to the clipboard, once you leave the page the key will not be visible.</li><li>Client ID and the Key generated by Microsoft Azure from the App is the Client ID and Client Secret.</li><li>Go to Appearance->Widgets. Among the available widgets you will find miniOrange OpenID Connect, drag it to the widget area where you want it to appear.</li><li>Now logout and go to your site. You will see a login link where you placed that widget.</li></ol>';
	}else if($appname == "salesforce") {
		echo '<strong>Instructions:</strong><ol><li>Sign up/Log in to the Salesforce portal at <a href="https://developer.salesforce.com/signup" target="_blank">https://developer.salesforce.com/signup</a>.</li><li>In Salesforce Classic, from Setup, enter Apps in the Quick Find box, select Apps (under Build > Create), then click the name of the connected app.</li><li>In Lightning Experience, from Setup, enter Apps in the Quick Find box, select App Manager, click , and then select Edit.Click Enable OAuth Settings and specify your callback URL and OAuth scopes.</li><li> For Callback/Redirect URI provide the <b>Configure OAuth->Redirect/Callback URI</b>. It must be secure: http:// does not work, only https://.</li><li>When you click Save, the Consumer Key is created and displayed, and a Consumer Secret is created (click the link to reveal it).</li><li>Consumer Key and Consumer Secret generated by SalesForce from the App is the Client ID and Client Secret respectively.</li><li>Go to Appearance->Widgets. Among the available widgets you will find miniOrange OpenID Connect, drag it to the widget area where you want it to appear.</li><li>Now logout and go to your site. You will see a login link where you placed that widget.</li></ol>';
	} else if($appname!=" ") {
		echo '<br><strong>Instructions to configure Custom OpenidConnect Server:</strong><ol><li>Enter your Client ID and Client Secret above.</li><li>Click on the Save settings button.</li><li> For Redirect URI provide the <b>Configure OAuth->Redirect/Callback URI</b>.</li><li>Go to Appearance->Widgets. Among the available widgets you will find miniOrange OpenID Connect Client, drag it to the widget area where you want it to appear.</li><li>Now logout and go to your site. You will see a login link where you placed that widget.</li></ol>';
	}
}

?>